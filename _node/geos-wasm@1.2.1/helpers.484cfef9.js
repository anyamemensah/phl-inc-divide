function g(t,o){if(!t)throw new Error("No GeoJSON object provided");if(!o)throw new Error("No GEOS module object provided");function a(e){if(!e||e.length===0)return null;const l=e.length,r=new Float64Array(e.flat()),c=o.Module._malloc(2*l*8);o.Module.HEAPF64.set(r,c/8);const n=o.GEOSCoordSeq_copyFromBuffer(c,l,!1,!1);return o.Module._free(c),n}switch(t.type){case"Feature":return g(t.geometry,o);case"FeatureCollection":if(t.features.length===0)return o.GEOSGeom_createEmptyCollection(7);{const e=[];t.features.forEach(n=>{e.push(g(n.geometry,o))});const l=o.Module._malloc(4*e.length),r=new Uint32Array(e);o.Module.HEAPU32.set(r,l/4);const c=o.GEOSGeom_createCollection(7,l,e.length);return o.Module._free(l),c}case"GeometryCollection":if(t.geometries.length===0)return o.GEOSGeom_createEmptyCollection(7);{const e=[];t.geometries.forEach(n=>{e.push(g(n,o))});const l=o.Module._malloc(4*e.length),r=new Uint32Array(e);o.Module.HEAPU32.set(r,l/4);const c=o.GEOSGeom_createCollection(7,l,e.length);return o.Module._free(l),c}case"Point":return t.coordinates.length===0?o.GEOSGeom_createEmptyPoint():o.GEOSGeom_createPointFromXY(t.coordinates[0],t.coordinates[1]);case"LineString":if(t.coordinates.length===0)return o.GEOSGeom_createEmptyLineString();{const e=a(t.coordinates);return o.GEOSGeom_createLineString(e)}case"Polygon":if(t.coordinates.length===0)return o.GEOSGeom_createEmptyPolygon();{const e=a(t.coordinates[0]),l=o.GEOSGeom_createLinearRing(e),r=[];if(t.coordinates.length>1)for(let s=1;s<t.coordinates.length;s++){const i=a(t.coordinates[s]);r.push(o.GEOSGeom_createLinearRing(i))}let c=null;if(r.length>0){const s=new Uint32Array(r);c=o.Module._malloc(4*r.length),o.Module.HEAPU32.set(s,c/4)}const n=o.GEOSGeom_createPolygon(l,c,r.length);return r.length>0&&o.Module._free(c),n}case"MultiPoint":if(t.coordinates.length===0)return o.GEOSGeom_createEmptyCollection(4);{const e=[];for(let n=0;n<t.coordinates.length;n++)e.push(o.GEOSGeom_createPointFromXY(t.coordinates[n][0],t.coordinates[n][1]));const l=o.Module._malloc(4*e.length),r=new Uint32Array(e);o.Module.HEAPU32.set(r,l/4);const c=o.GEOSGeom_createCollection(4,l,e.length);return o.Module._free(l),c}case"MultiLineString":if(t.coordinates.length===0)return o.GEOSGeom_createEmptyCollection(5);{const e=[];for(let n=0;n<t.coordinates.length;n++){const s=a(t.coordinates[n]);e.push(o.GEOSGeom_createLineString(s))}const l=o.Module._malloc(4*e.length),r=new Uint32Array(e);o.Module.HEAPU32.set(r,l/4);const c=o.GEOSGeom_createCollection(5,l,e.length);return o.Module._free(l),c}case"MultiPolygon":if(t.coordinates.length===0)return o.GEOSGeom_createEmptyCollection(6);{const e=[];for(let n=0;n<t.coordinates.length;n++){const s=a(t.coordinates[n][0]),i=o.GEOSGeom_createLinearRing(s),u=[];if(t.coordinates[n].length>1)for(let d=1;d<t.coordinates[n].length;d++){const E=a(t.coordinates[n][d]);u.push(o.GEOSGeom_createLinearRing(E))}let G=null;if(u.length>0){const d=new Uint32Array(u);G=o.Module._malloc(4*u.length),o.Module.HEAPU32.set(d,G/4)}const m=o.GEOSGeom_createPolygon(i,G,u.length);u.length>0&&o.Module._free(G),e.push(m)}const l=o.Module._malloc(4*e.length),r=new Uint32Array(e);o.Module.HEAPU32.set(r,l/4);const c=o.GEOSGeom_createCollection(6,l,e.length);return o.Module._free(l),c}default:throw new Error("Unsupported GeoJSON type: "+t.type+". Are you sure this is valid GeoJSON?")}}function S(t,o){if(!t)throw new Error("No GEOS geometry pointer provided");if(!o)throw new Error("No GEOS module object provided");function a(e){if(!e)return null;const l=o.Module._malloc(4);o.GEOSCoordSeq_getSize(e,l);const r=o.Module.getValue(l,"i32");if(o.Module._free(l),r===0)return[];const c=[],n=o.Module._malloc(2*r*8);o.GEOSCoordSeq_copyToBuffer(e,n,!1,!1);const s=new Float64Array(o.Module.HEAPF64.buffer,n,2*r);for(let i=0;i<2*r;i+=2)c.push([s[i],s[i+1]]);return o.Module._free(n),c}if(!t)return null;switch(o.GEOSGeomTypeId(t)){case 0:{const e=o.GEOSGeom_getCoordSeq(t),l=[],r=o.Module._malloc(4);o.GEOSCoordSeq_getSize(e,r);const c=o.Module.getValue(r,"i32");if(o.Module._free(r),c===1){const n=o.Module._malloc(8),s=o.Module._malloc(8);o.GEOSCoordSeq_getXY(e,0,n,s);const i=o.Module.getValue(n,"double"),u=o.Module.getValue(s,"double");o.Module._free(n),o.Module._free(s),l.push(i,u)}return{type:"Point",coordinates:l}}case 1:return{type:"LineString",coordinates:a(o.GEOSGeom_getCoordSeq(t))};case 3:{const e=[],l=o.GEOSGetExteriorRing(t);if(l!==0){const r=o.GEOSGeom_getCoordSeq(l),c=o.Module._malloc(4);o.GEOSCoordSeq_getSize(r,c);const n=o.Module.getValue(c,"i32");if(o.Module._free(c),n>0){e.push(a(r));const s=o.GEOSGetNumInteriorRings(t);for(let i=0;i<s;i++){const u=o.GEOSGetInteriorRingN(t,i),G=o.GEOSGeom_getCoordSeq(u);e.push(a(G))}}}return{type:"Polygon",coordinates:e}}case 4:{const e=[],l=o.GEOSGetNumGeometries(t);for(let r=0;r<l;r++){const c=o.GEOSGetGeometryN(t,r),n=o.GEOSGeom_getCoordSeq(c),s=o.Module._malloc(8),i=o.Module._malloc(8);o.GEOSCoordSeq_getXY(n,0,s,i);const u=o.Module.getValue(s,"double"),G=o.Module.getValue(i,"double");o.Module._free(s),o.Module._free(i),e.push([u,G])}return{type:"MultiPoint",coordinates:e}}case 5:{const e=[],l=o.GEOSGetNumGeometries(t);for(let r=0;r<l;r++){const c=o.GEOSGetGeometryN(t,r),n=o.GEOSGeom_getCoordSeq(c);e.push(a(n))}return{type:"MultiLineString",coordinates:e}}case 6:{const e=[],l=o.GEOSGetNumGeometries(t);for(let r=0;r<l;r++){const c=o.GEOSGetGeometryN(t,r),n=[],s=o.GEOSGetExteriorRing(c),i=o.GEOSGeom_getCoordSeq(s);n.push(a(i));const u=o.GEOSGetNumInteriorRings(c);for(let G=0;G<u;G++){const m=o.GEOSGetInteriorRingN(c,G),d=o.GEOSGeom_getCoordSeq(m);n.push(a(d))}e.push(n)}return{type:"MultiPolygon",coordinates:e}}case 7:{const e=[],l=o.GEOSGetNumGeometries(t);for(let r=0;r<l;r++){const c=o.GEOSGetGeometryN(t,r);e.push(S(c,o))}return{type:"GeometryCollection",geometries:e}}default:return null}}var f={geojsonToGeosGeom:g,geosGeomToGeojson:S};export{f as default,g as geojsonToGeosGeom,S as geosGeomToGeojson};
